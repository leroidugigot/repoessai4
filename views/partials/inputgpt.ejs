<div class="flex flex-col h-full p-6 bg-gradient-to-b from-gray-100 to-gray-300 rounded-lg shadow-lg">
    <h2 class="text-2xl font-bold mb-4 text-center">ChatGPT Virtuel</h2>
    <div class="flex-1 overflow-y-auto bg-white border border-gray-300 rounded-lg p-4 shadow-inner">
        <div id="messages" class="space-y-4">
            <!-- Messages will be displayed here -->
        </div>
    </div>

    <div class="flex items-center mt-4">
        <input type="text" id="userInput" placeholder="Ã‰crivez votre message..." class="flex-1 border border-gray-300 rounded-lg p-2 focus:outline-none focus:ring-2 focus:ring-blue-500" />
        <button id="sendButton" class="ml-2 bg-blue-600 text-white p-2 rounded-lg hover:bg-blue-700 transition-colors duration-200 ease-in-out">
            <i class="fas fa-paper-plane"></i> <!-- Icone d'envoi -->
        </button>
    </div>
</div>

<script>
    const sendButton = document.getElementById('sendButton');
    const userInput = document.getElementById('userInput');
    const messagesContainer = document.getElementById('messages');

    // Fonction pour afficher un message
    function displayMessage(content, fromUser = true) {
        const messageDiv = document.createElement('div');
        messageDiv.className = fromUser ? 'text-left' : 'text-right';
        messageDiv.innerHTML = `<div class="${fromUser ? 'bg-blue-200' : 'bg-green-200'} p-3 rounded-lg shadow-md transition-transform transform hover:scale-105">${content}</div>`;
        messagesContainer.appendChild(messageDiv);
        messagesContainer.scrollTop = messagesContainer.scrollHeight; // DÃ©filement vers le bas
    }

    // Ã‰couteur d'Ã©vÃ©nements pour le bouton "Envoyer"
    sendButton.addEventListener('click', () => {
        const userMessage = userInput.value.trim();
        if (userMessage) {
            displayMessage(userMessage); // Afficher le message de l'utilisateur
            userInput.value = ''; // RÃ©initialiser l'input

            // Simuler une rÃ©ponse de l'API
            setTimeout(() => {
                displayMessage("ðŸ¤– Voici une rÃ©ponse simulÃ©e Ã  votre message: '" + userMessage + "'", false);
            }, 1000); // DÃ©lai de 1 seconde pour simuler le temps de rÃ©ponse
        }
    });

    // Ã‰couteur d'Ã©vÃ©nements pour envoyer un message en appuyant sur "EntrÃ©e"
    userInput.addEventListener('keypress', (e) => {
        if (e.key === 'Enter') {
            sendButton.click(); // Simuler le clic sur le bouton "Envoyer"
        }
    });
</script>
