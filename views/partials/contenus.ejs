<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Formations</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>
:root {
    --primary-color: #1A73E8;
    --accent-color: #F2994A;
    --background-color: #F4F7FA;
    --card-bg: #FFFFFF;
    --shadow: rgba(0, 0, 0, 0.1);
    --text-color: #333333;
    --border-color: #E0E6ED;
}

/* Navigation */
.navigation {
    display: flex;
    align-items: center;
    gap: 20px;
    padding: 12px 24px;
    background-color: var(--card-bg);
    border-radius: 10px;
    box-shadow: 0 5px 15px var(--shadow);
    margin-bottom: 20px;
    width: 100%;
    max-width: 1200px;
}

.nav-button {
    font-size: 16px;
    font-weight: 500;
    background-color: var(--primary-color);
    color: #FFFFFF;
    padding: 10px 20px; 
    border-radius: 8px;
    cursor: pointer;
    border: none;
    transition: background-color 0.3s, transform 0.2s;
}

.nav-button:hover {
    background-color: #1557b0;
    transform: translateY(-2px);
}

.breadcrumb {
    display: flex;
    align-items: center;
    gap: 10px;
    font-size: 14px;
    color: var(--text-color);
}

.breadcrumb-item {
    padding: 6px 12px;
    background-color: var(--background-color);
    border-radius: 6px;
    transition: background-color 0.2s;
}

.breadcrumb-separator {
    color: var(--text-color);
    font-size: 12px;
}

/* Conteneurs principaux */
.container {
    width: 100%;
    max-width: 1200px;
}

#formationList, #moduleList, #contentDisplay {
    background: var(--card-bg);
    border-radius: 12px;
    padding: 24px;
    box-shadow: 0 5px 20px var(--shadow);
    transition: box-shadow 0.3s, transform 0.2s;
    margin-bottom: 24px;
}

#formationList:hover, #moduleList:hover, #contentDisplay:hover {
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
}

.formation-item, .module-item {
    background: var(--card-bg);
    padding: 16px;
    margin: 1.2rem 0;
    border-radius: 12px;
    display: flex;
    align-items: center;
    gap: 1.2rem;
    position: relative;
    border: 1px solid var(--border-color);
    cursor: pointer;
    transition: transform 0.2s, box-shadow 0.2s;
}

.formation-item:hover, .module-item:hover {
    transform: translateY(-4px);
    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);
}

.formation-item::before, .module-item::before {
    content: '';
    position: absolute;
    left: 0;
    top: 0;
    height: 100%;
    width: 5px;
    background-color: var(--accent-color);
    border-radius: 12px 0 0 12px;
}

.icon-container {
    width: 48px;
    height: 48px;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 12px;
    background: rgba(26, 115, 232, 0.1);
}

.formation-item i, .module-item i {
    font-size: 24px;
    color: var(--primary-color);
}

.loading-animation {
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 200px;
}

.spinner {
    width: 40px;
    height: 40px;
    border: 4px solid #f3f3f3;
    border-top: 4px solid var(--primary-color);
    border-radius: 50%;
    animation: spin 1s linear infinite;
}

.content-header {
    display: flex;
    align-items: center;
    gap: 1.5rem;
    margin-bottom: 2.4rem;
    padding-bottom: 1rem;
    border-bottom: 1px solid var(--border-color);
    font-size: 1.2rem;
    font-weight: 600;
    color: var(--primary-color);
}

.content-body {
    background: var(--card-bg);
    padding: 2rem;
    border-radius: 12px;
    box-shadow: 0 6px 18px rgba(0, 0, 0, 0.07);
    margin-bottom: 24px;
    line-height: 1.6;
}

.video-container, .quiz-container {
    background: rgba(26, 115, 232, 0.05);
    padding: 1.5rem;
    border-radius: 12px;
    margin: 1rem 0;
    transition: transform 0.3s, box-shadow 0.3s;
}

.video-container:hover, .quiz-container:hover {
    transform: scale(1.03);
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.08);
}

.content-description {
    font-size: 1.1rem;
    line-height: 1.8;
    color: var(--text-color);
    margin-bottom: 1.5rem;
    padding: 1rem;
    background-color: var(--background-color);
    border-left: 5px solid var(--primary-color);
    border-radius: 8px;
    transition: transform 0.3s, box-shadow 0.3s ease-in-out;
}

.content-description:hover {
    transform: translateY(-4px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    background-color: var(--card-bg);
}

@keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
}

.hidden {
    display: none;
}

@media (max-width: 768px) {
    .icon-container {
        width: 40px;
        height: 40px;
    }
}
    </style>
</head>
<body>
    <nav class="navigation">
        <button class="nav-button" onclick="window.location.reload()">
            <i class="fas fa-home"></i> Accueil
        </button>
        <div class="breadcrumb"></div>
    </nav>

    <div class="container">
        <div id="formationList" class="hidden">
            <!-- Liste des formations -->
        </div>
        
        <div id="moduleList" class="hidden">
            <!-- Liste des modules -->
        </div>
        
        <div id="contentDisplay" class="hidden">
            <!-- Contenu -->
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            let currentFormation = null;
            let currentModule = null;

            function updateBreadcrumb() {
                const breadcrumb = document.querySelector('.breadcrumb');
                let html = '';
                
                if (currentFormation) {
                    html += `
                        <span class="breadcrumb-item">${currentFormation}</span>
                    `;
                    
                    if (currentModule) {
                        html += `
                            <span class="breadcrumb-separator">
                                <i class="fas fa-chevron-right"></i>
                            </span>
                            <span class="breadcrumb-item">${currentModule}</span>
                        `;
                    }
                }
                
                breadcrumb.innerHTML = html;
            }

            function showLoading(element) {
                element.innerHTML = `
                    <div class="loading-animation">
                        <div class="spinner"></div>
                    </div>
                `;
            }

            function loadFormations() {
                const formationList = document.getElementById('formationList');
                showLoading(formationList);
                formationList.classList.remove('hidden');
                document.getElementById('moduleList').classList.add('hidden');
                document.getElementById('contentDisplay').classList.add('hidden');
                currentFormation = null;
                currentModule = null;
                updateBreadcrumb();

                fetch('/formations')
                    .then(response => {
                        if (!response.ok) {
                            throw new Error('Réponse du serveur non valide');
                        }
                        return response.json();
                    })
                    .then(data => {
                        formationList.innerHTML = data.map(formation => `
                            <div class="formation-item fade-in" onclick="loadFormationsDescription('${formation._id}', '${formation.nom}')">
                                <div class="icon-container">
                                    <i class="fas fa-graduation-cap"></i>
                                </div>
                                <div class="formation-content">
                                    <h3>${formation.nom}</h3>
                                </div>
                            </div>
                        `).join('');
                    })
                    .catch(error => {
                        console.error('Erreur lors du chargement des formations:', error);
                    });
            }

            window.loadFormationsDescription = function(formationId, formationName) {
                const formationList = document.getElementById('formationList');
                showLoading(formationList);
                currentFormation = formationName;
                updateBreadcrumb();

                fetch(`/formations/${formationId}`)
                    .then(response => {
                        if (!response.ok) throw new Error('Erreur lors de la récupération de la formation');
                        return response.json();
                    })
                    .then(formation => {
                        formationList.innerHTML = ` 
                            <div class="formation-item fade-in">
                                <div class="icon-container">
                                    <i class="fas fa-graduation-cap"></i>
                                </div>
                                <div class="formation-content">
                                    <h3>${formation.nom}</h3>
                                    <p class="formation-description">${formation.description || 'Aucune description disponible'}</p>
                                    <button class="btn-inscription" data-formation-id="${formation._id}">S'inscrire</button>
                                </div>
                            </div>
                        `;

                        document.querySelector('.btn-inscription').addEventListener('click', function() {
                            inscrireAFormation(formation._id, formationName);
                        });
                    })
                    .catch(error => {
                        console.error('Erreur lors de la récupération de la formation:', error);
                    });
            };

            function inscrireAFormation(formationId, formationName) {
                fetch(`/formations/${formationId}/inscription`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({})
                })
                .then(response => {
                    if (!response.ok) {
                        return response.json().then(err => { throw new Error(err.message); });
                    }
                    return response.json();
                })
                .then(data => {
                    alert(data.message);
                    loadModules(formationId, formationName);
                })
                .catch(error => {
                    console.error('Erreur lors de l\'inscription:', error);
                    alert('Erreur lors de l\'inscription : ' + error.message);
                });
            }

            window.loadModules = function(formationId, formationName) {
                const moduleList = document.getElementById('moduleList');
                showLoading(moduleList);
                moduleList.classList.remove('hidden');
                document.getElementById('formationList').classList.add('hidden');
                
                currentFormation = formationName;
                currentModule = null;
                updateBreadcrumb();

                fetch(`/formations/${formationId}/modules`)
                    .then(response => {
                        if (!response.ok) throw new Error('Erreur de chargement des modules');
                        return response.json();
                    })
                    .then(data => {
                        moduleList.innerHTML = data.map(module => `
                            <div class="module-item fade-in" onclick="loadContent('${formationId}', '${module._id}', '${module.nom}')">
                                <div class="icon-container">
                                    <i class="fas fa-book"></i>
                                </div>
                                <div class="module-content">
                                    <h3>${module.nom}</h3>
                                    <p class="module-description">${module.description || 'Aucune description disponible'}</p>
                                </div>
                            </div>
                        `).join('');
                    })
                    .catch(error => {
                        moduleList.innerHTML = `
                            <div class="error-message">
                                <i class="fas fa-exclamation-circle"></i>
                                Une erreur est survenue lors du chargement des modules
                            </div>
                        `;
                    });
            }

            window.loadContent = function(formationId, moduleId, moduleName) {
                const contentDisplay = document.getElementById('contentDisplay');
                showLoading(contentDisplay);
                contentDisplay.classList.remove('hidden');
                document.getElementById('moduleList').classList.add('hidden');
                
                currentModule = moduleName;
                updateBreadcrumb();

                fetch(`/formations/${formationId}/modules/${moduleId}/content`)
                    .then(response => {
                        if (!response.ok) throw new Error('Erreur de chargement du contenu');
                        return response.json();
                    })
                    .then(data => {
                        contentDisplay.innerHTML = `
                            <div class="content-header fade-in">
                                <h2>${data.title}</h2>
                            </div>
                            <div class="content-body fade-in">
                                <p class="content-description">${data.description}</p>
                                
                                <div class="video-container">
                                    <h3><i class="fas fa-video"></i> Vidéo</h3>
                                    <p>${data.video || 'Aucune vidéo disponible'}</p>
                                </div>
                                
                                <div class="quiz-container">
                                    <h3><i class="fas fa-question-circle"></i> Quiz</h3>
                                    <p>${data.quiz || 'Aucun quiz disponible'}</p>
                                    </div>
                            </div>
                        `;
                    })
                    .catch(error => {
                        contentDisplay.innerHTML = `
                            <div class="error-message">
                                <i class="fas fa-exclamation-circle"></i>
                                Une erreur est survenue lors du chargement du contenu
                            </div>
                        `;
                    });
            }

            loadFormations();
            
        });
    </script>
</body>
</html>